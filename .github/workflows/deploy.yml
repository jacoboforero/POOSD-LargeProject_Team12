name: Deploy to Server

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "backend/package-lock.json"

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Build application
        run: |
          cd backend
          npm run build

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script_stop: true
          script: |
            set -e
            echo "=== Starting deployment ==="
            cd /root/POOSD/POOSD-LargeProject_Team12

            echo "=== Move .env OUT of repo temporarily ==="
            [ -f backend/.env ] && mv backend/.env /tmp/production.env || echo "No .env found"

            echo "=== Pull latest code ==="
            git fetch origin main
            git reset --hard origin/main

            echo "=== Move .env BACK into backend ==="
            [ -f /tmp/production.env ] && mv /tmp/production.env backend/.env && echo "✓ Production .env restored"

            cd backend

            echo "=== Verify .env exists ==="
            if [ ! -f .env ]; then
              echo "❌ ERROR: No .env file! Deployment cannot continue."
              echo "Please create backend/.env on the server with production values!"
              exit 1
            fi

            echo "=== Installing dependencies ==="
            npm ci

            echo "=== Building application ==="
            npm run build

            echo "=== Restarting PM2 ==="
            pm2 restart news-briefing-api || pm2 start dist/backend/src/index.js --name news-briefing-api
            pm2 save

            echo "=== Waiting for app to start ==="
            sleep 5

            echo "=== Checking PM2 status ==="
            pm2 list

            echo "=== Verifying API responds ==="
            if curl -f http://localhost:3001/health > /dev/null 2>&1; then
              echo "✅ API is responding!"
              echo "=== Deployment successful ==="
            else
              echo "❌ API is not responding!"
              echo "=== Checking logs ==="
              pm2 logs news-briefing-api --lines 30 --nostream
              exit 1
            fi
